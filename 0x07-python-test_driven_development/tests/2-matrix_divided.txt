=============================
The ```2-matrix_divided.py```
=============================

Using ``matrix_divided``
------------------------

Import the function:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Testing:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

Test division by 0:
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

Test division by string:
    >>> matrix_divided(matrix, 'string')
    Traceback (most recent call last):
    TypeError: div must be a number

Test matrix is not list:
    >>> matrix_divided([1, 7)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix doesn`t have a list inside:
    >>> matrix_divided([2, 6], 5)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test values in the matrix are not integers:
    >>> matrix_divided([[3, 'j'], [3, 6]], 5)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test the length of the matrix:
    >>> matrix_divided([[1, 7, 20], [2, 6], 6)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Test original matrix is not affected, returned a new matrix:
    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]
    >>> print(matrix)
    [[1, 2, 3], [4, 5, 6]]

Test number of arguments passed to the function:
    >>> matrix_divided(matrix)
    Traceback (most recent call last):
    TypeError: missing 1 required argument on the function matrix_divided(object, div)

    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: missing 2 required arguments on the function matrix_divided(object, div)
